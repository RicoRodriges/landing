(()=>{"use strict";var t={126:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class i{constructor(t){if(16!==(t=t||[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]).length)throw new Error("Matrix is 4x4");this.data=new Float32Array(t)}multiply(t){const e=this.data[0],i=this.data[1],n=this.data[2],r=this.data[3],s=this.data[4],o=this.data[5],a=this.data[6],h=this.data[7],l=this.data[8],d=this.data[9],c=this.data[10],f=this.data[11],u=this.data[12],g=this.data[13],m=this.data[14],p=this.data[15],w=t.data[0],v=t.data[1],_=t.data[2],x=t.data[3],T=t.data[4],E=t.data[5],P=t.data[6],y=t.data[7],I=t.data[8],M=t.data[9],S=t.data[10],O=t.data[11],B=t.data[12],b=t.data[13],L=t.data[14],R=t.data[15];this.data[0]=w*e+v*s+_*l+x*u,this.data[1]=w*i+v*o+_*d+x*g,this.data[2]=w*n+v*a+_*c+x*m,this.data[3]=w*r+v*h+_*f+x*p,this.data[4]=T*e+E*s+P*l+y*u,this.data[5]=T*i+E*o+P*d+y*g,this.data[6]=T*n+E*a+P*c+y*m,this.data[7]=T*r+E*h+P*f+y*p,this.data[8]=I*e+M*s+S*l+O*u,this.data[9]=I*i+M*o+S*d+O*g,this.data[10]=I*n+M*a+S*c+O*m,this.data[11]=I*r+M*h+S*f+O*p,this.data[12]=B*e+b*s+L*l+R*u,this.data[13]=B*i+b*o+L*d+R*g,this.data[14]=B*n+b*a+L*c+R*m,this.data[15]=B*r+b*h+L*f+R*p}static Ortho(t,e,n,r,s,o){return new i([2/(e-t),0,0,0,0,2/(r-n),0,0,0,0,2/(s-o),0,(t+e)/(t-e),(n+r)/(n-r),(s+o)/(s-o),1])}static Perspective(t,e,n,r){const s=Math.tan(.5*Math.PI-.5*t),o=1/(n-r);return new i([s/e,0,0,0,0,s,0,0,0,0,(n+r)*o,-1,0,0,n*r*o*2,0])}static Translate(t,e,n){return new i([1,0,0,0,0,1,0,0,0,0,1,0,t,e,n,1])}static XRotate(t){const e=Math.cos(t),n=Math.sin(t);return new i([1,0,0,0,0,e,n,0,0,-n,e,0,0,0,0,1])}static YRotate(t){const e=Math.cos(t),n=Math.sin(t);return new i([e,0,-n,0,0,1,0,0,n,0,e,0,0,0,0,1])}static ZRotate(t){const e=Math.cos(t),n=Math.sin(t);return new i([e,n,0,0,-n,e,0,0,0,0,1,0,0,0,0,1])}static Scale(t,e,n){return new i([t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1])}static LookAt(t,e,n,r,s,o,a,h,l){let d=r-t,c=s-e,f=o-n;const u=1/Math.sqrt(d*d+c*c+f*f);d*=u,c*=u,f*=u;let g=c*l-f*h,m=f*a-d*l,p=d*h-c*a;const w=1/Math.sqrt(g*g+m*m+p*p);return g*=w,m*=w,p*=w,new i([g,m*f-p*c,-d,0,m,p*d-g*f,-c,0,p,g*c-m*d,-f,0,0,0,0,1]).translate(-t,-e,-n)}translate(t,e,n){return this.multiply(i.Translate(t,e,n)),this}xRotate(t){return this.multiply(i.XRotate(t)),this}yRotate(t){return this.multiply(i.YRotate(t)),this}zRotate(t){return this.multiply(i.ZRotate(t)),this}scale(t,e,n){return this.multiply(i.Scale(t,e,n)),this}lookAt(t,e,n,r,s,o,a,h,l){return this.multiply(i.LookAt(t,e,n,r,s,o,a,h,l)),this}}e.default=i},109:(t,e)=>{function i(t,e,i,n){for(let r=0;r<t.positions.length;r+=3)t.positions[r+0]+=e,t.positions[r+1]+=i,t.positions[r+2]+=n}var n;Object.defineProperty(e,"__esModule",{value:!0}),e.Pyramid=e.Triangle=e.Plane45deg=e.PlaneRotate=e.YZPlane=e.XZPlane=e.XYPlane=e.Cuboid=e.rotateZ180=e.translate=void 0,e.translate=i,e.rotateZ180=function(t){let e=-1e5,n=-1e5;for(let i=0;i<t.positions.length;i+=3){const r=t.positions[i+0],s=t.positions[i+1];e=Math.max(r,e),n=Math.max(s,n),t.positions[i+0]=-r,t.positions[i+1]=-s,3===t.normals.length?0===i&&(t.normals[0]*=-1,t.normals[1]*=-1):(t.normals[i+0]*=-1,t.normals[i+1]*=-1)}i(t,e,n,0)},e.Cuboid=function(t,e,i){return{positions:[0,0,0,t,0,0,t,0,i,0,0,i,t,0,0,t,0,i,t,e,0,t,e,i,0,e,0,t,e,0,t,e,i,0,e,i,0,0,0,0,0,i,0,e,0,0,e,i,0,0,i,t,0,i,t,e,i,0,e,i,0,0,0,t,0,0,t,e,0,0,e,0],normals:[0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1],indexes:[0,1,2,0,2,3,4,6,5,5,6,7,8,10,9,8,11,10,12,13,14,13,15,14,16,17,18,16,18,19,20,22,21,20,23,22]}},e.XYPlane=function(t,e){return{positions:[0,0,0,t,0,0,0,e,0,t,e,0],normals:[0,0,1],indexes:[0,1,2,2,1,3]}},e.XZPlane=function(t,e){return{positions:[0,0,0,t,0,0,0,0,e,t,0,e],normals:[0,-1,0],indexes:[0,1,2,2,1,3]}},e.YZPlane=function(t,e){return{positions:[0,0,0,0,0,e,0,t,0,0,t,e],normals:[-1,0,0],indexes:[0,1,2,2,1,3]}},function(t){t[t.X=0]="X",t[t.Y=1]="Y"}(n=e.PlaneRotate||(e.PlaneRotate={})),e.Plane45deg=function(t,e,i,r,s){const o=r?0:i,a=s===n.Y?r?i:0:o,h=s===n.Y?o:r?i:0,l=.7071;return{positions:[0,0,o,t,0,a,0,e,h,t,e,s===n.Y?a:h],normals:[s===n.Y?l:0,s===n.Y?0:l,l],indexes:[0,1,2,2,1,3]}},e.Triangle=function(t,e,i,n,r,s,o,a,h){return{positions:[0,0,0,t,e,i,n,r,s],normals:[o,a,h],indexes:[0,1,2]}},e.Pyramid=function(t,e,i){const n=Math.atan(i/(t/2))+Math.PI/2,r=Math.cos(n),s=Math.sin(n),o=Math.atan(i/(e/2))+Math.PI/2,a=Math.cos(o),h=Math.sin(o);return{positions:[0,0,0,t,0,0,0,e,0,t,e,0,0,0,0,t/2,e/2,i,0,e,0,t,0,0,t,e,0,t/2,e/2,i,0,0,0,t,0,0,t/2,e/2,i,0,e,0,t/2,e/2,i,t,e,0],normals:[0,0,-1,0,0,-1,0,0,-1,0,0,-1,r,0,s,r,0,s,r,0,s,-r,0,s,-r,0,s,-r,0,s,0,a,h,0,a,h,0,a,h,0,-a,h,0,-a,h,0,-a,h],indexes:[0,1,2,2,1,3,4,5,6,7,8,9,10,11,12,13,14,15]}}},921:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const n=i(300);e.default=class{constructor(t,e,i,r,s){if(this.attrs=new Map,this.uniforms=new Map,this.gl=t.getContext("webgl")||t.getContext("experimental-webgl"),!this.gl)throw new Error("WebGL is not supported!");this.prog=(0,n.createProgramFromScripts)(this.gl,e,i),r.forEach((t=>this.attrs.set(t,this.gl.getAttribLocation(this.prog,t)))),s.forEach((t=>this.uniforms.set(t,this.gl.getUniformLocation(this.prog,t))))}useProgram(){this.gl.useProgram(this.prog)}uniformMatrix(t,e){const i=this.uniforms.get(t);if(void 0===i)throw new Error(`Program has no ${t} uniform variables`);const n=e.length;if(4===n)this.gl.uniformMatrix2fv(i,!1,e);else if(9===n)this.gl.uniformMatrix3fv(i,!1,e);else{if(16!==n)throw new Error(`Matrix size ${n} is not supported`);this.gl.uniformMatrix4fv(i,!1,e)}}uniformVector(t,e,i,n,r){const s=this.uniforms.get(t);if(void 0===s)throw new Error(`Program has no ${t} uniform variables`);void 0!==r?this.gl.uniform4f(s,e,i,n,r):void 0!==n?this.gl.uniform3f(s,e,i,n):void 0!==i?this.gl.uniform2f(s,e,i):this.gl.uniform1f(s,e)}arrayBuffer(t,e,i,n,r=!1){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t),void 0!==n&&this.gl.bufferData(this.gl.ARRAY_BUFFER,n,r?this.gl.DYNAMIC_DRAW:this.gl.STATIC_DRAW),Object.entries(i).forEach((([t,i])=>{const n=this.attrs.get(t);if(void 0===n)throw new Error(`Program has no ${t} attribute variables`);this.gl.enableVertexAttribArray(n),this.gl.vertexAttribPointer(n,i.elems,i.elType,i.normalized,e,i.offsetBytes)}))}indexBuffer(t,e,i=!1){this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t),void 0!==e&&this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,e,i?this.gl.DYNAMIC_DRAW:this.gl.STATIC_DRAW)}drawElements(t,e,i,n=0){this.gl.drawElements(t,e,i,n)}drawArrays(t,e,i=0){this.gl.drawArrays(t,i,e)}createBuffer(){return this.gl.createBuffer()}deleteBuffer(t){this.gl.deleteBuffer(t)}destroyProgram(){this.gl.deleteProgram(this.prog)}get width(){return this.gl.canvas.clientWidth}get height(){return this.gl.canvas.clientHeight}}},300:(t,e)=>{function i(t,e,i){const r=t.createShader(e);if(r){if(t.shaderSource(r,i),t.compileShader(r),t.getShaderParameter(r,t.COMPILE_STATUS))return r;console.error(t.getShaderInfoLog(r)),n(t,r)}throw new Error("Shader couldn't be compiled")}function n(t,e){t.deleteShader(e)}function r(t,e,i){const n=t.createProgram();if(n){if(t.attachShader(n,e),t.attachShader(n,i),t.linkProgram(n),t.getProgramParameter(n,t.LINK_STATUS))return n;console.error(t.getProgramInfoLog(n)),s(t,n)}throw new Error("Program couldn't be created")}function s(t,e){t.deleteProgram(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.isVisible=e.resizeContext=e.deleteProgram=e.createProgramFromScripts=e.createProgram=e.deleteShader=e.createShader=void 0,e.createShader=i,e.deleteShader=n,e.createProgram=r,e.createProgramFromScripts=function(t,e,n){return r(t,i(t,t.VERTEX_SHADER,e),i(t,t.FRAGMENT_SHADER,n))},e.deleteProgram=s,e.resizeContext=function(t){const e=t.canvas,i=window.devicePixelRatio,n=Math.round(e.clientWidth*i),r=Math.round(e.clientHeight*i);e.width==n&&e.height==r||(e.width=n,e.height=r,t.viewport(0,0,n,r))},e.isVisible=function(t){const e=t.canvas.getBoundingClientRect(),i=e.top,n=e.bottom,r=window.innerHeight;return n>0&&i<r}},674:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseMTL=void 0,e.parseMTL=function(t){const e=new Map;let i={};const n={newmtl(t,n){i={},e.set(n,i)},Ns(t){i.shininess=parseFloat(t[0])},Ka(t){i.ambient=t.map(parseFloat)},Kd(t){i.diffuse=t.map(parseFloat)},Ks(t){i.specular=t.map(parseFloat)},Ke(t){i.emissive=t.map(parseFloat)},Ni(t){i.opticalDensity=parseFloat(t[0])},d(t){i.opacity=parseFloat(t[0])},illum(t){i.illum=parseInt(t[0])}},r=/(\w+)\s+(.*)/;for(const e of t.split("\n").map((t=>t.trim()))){if(""===e||e.startsWith("#"))continue;const t=r.exec(e);if(!t)continue;const[,i,s]=t,o=e.split(/\s+/).slice(1),a=n[i];a?a(o,s):console.debug("unhandled keyword:",i)}return e}},391:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class i{constructor(){this.positions=[[0,0,0]],this.texcoords=[[0,0]],this.normals=[[0,0,0]],this.geometries=[]}static parse(t){const e=new i;let n=null;function r(){if(n&&n.triangles.length){if(!n.name&&e.geometries.length>1){const t=e.geometries[e.geometries.length-2];n.name=t.name}n=null}}function s(){if(null===n){const t={triangles:[]};e.geometries.push(t),n=t}return n}function o(t){const e=t.split("/");if(2===e.length&&e.push("0"),3!==e.length)throw new Error(`Expected 3 vertex indexes like '1/1/1'. Found ${e.length} indexes: ${t}`);const i=e.map((t=>parseInt(t)));if(i.some((t=>isNaN(t))))throw new Error(`Vertex indexes '${t}' is not supported`);return i}const a={v(t){if(3!==t.length)throw new Error(`'v' command has ${t.length} coordinates. Expected 3`);e.positions.push(t.map((t=>parseFloat(t))))},vn(t){if(3!==t.length)throw new Error(`'vn' command has ${t.length} coordinates. Expected 3`);e.normals.push(t.map((t=>parseFloat(t))))},vt(t){if(t.length<2)throw new Error(`'vt' command has ${t.length} coordinates. Expected at least 2`);e.texcoords.push(t.map((t=>parseFloat(t))).slice(0,2))},f(t){const e=s(),i=t.length-2;for(let n=0;n<i;++n)e.triangles.push([o(t[0]),o(t[n+1]),o(t[n+2])])},s(){},mtllib(){},usemtl(t,e){r(),s().material=e},g(){r()},o(t,e){r(),s().name=e}},h=/(\w+)\s+(.*)/;for(const e of t.split("\n").map((t=>t.trim()))){if(""===e||e.startsWith("#"))continue;const t=h.exec(e);if(!t)continue;const[,i,n]=t,r=e.split(/\s+/).slice(1),s=a[i];s?s(r,n):console.debug("unhandled keyword:",i)}return e.geometries=e.geometries.filter((t=>t.triangles.length>0)),e}getPositionOf(t){return this.positions[t[0]]}getNormalOf(t){return this.normals[t[2]]}getSize(){const t={min:[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY],max:[Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY]};for(const e of this.geometries)for(const i of e.triangles)for(const e of i){const i=this.getPositionOf(e);for(let e=0;e<3;++e)t.min[e]=Math.min(i[e],t.min[e]),t.max[e]=Math.max(i[e],t.max[e])}return t}getTriangleCount(){return this.geometries.reduce(((t,e)=>t+e.triangles.length),0)}}e.default=i},730:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(t){this.buf=new ArrayBuffer(t),this.view=new DataView(this.buf,0,t),this.size=0}clean(){this.size=0}reserveAndClean(t){t>this.buf.byteLength&&(this.buf=new ArrayBuffer(t),this.view=new DataView(this.buf,0,t)),this.clean()}get rawBuffer(){return this.buf}get bytes(){return this.size}slice(t,e,i){return e=e||0,i=i||Math.trunc((this.size-e)/t.BYTES_PER_ELEMENT),new t(this.buf,e,i)}}},146:function(t,e,i){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=n(i(730));class s extends r.default{constructor(t){super(t)}sliceFloat32(t,e){return this.slice(Float32Array,t,e)}sliceUint16(t,e){return this.slice(Uint16Array,t,e)}write4Uint8(t,e,i,n){this.view.setUint8(this.size,t),this.size+=1,this.view.setUint8(this.size,e),this.size+=1,this.view.setUint8(this.size,i),this.size+=1,this.view.setUint8(this.size,n),this.size+=1}write3Float32(t,e,i){this.view.setFloat32(this.size,t,!0),this.size+=4,this.view.setFloat32(this.size,e,!0),this.size+=4,this.view.setFloat32(this.size,i,!0),this.size+=4}write2Float32(t,e){this.view.setFloat32(this.size,t,!0),this.size+=4,this.view.setFloat32(this.size,e,!0),this.size+=4}write2Uint16(t,e){this.view.setUint16(this.size,t,!0),this.size+=2,this.view.setUint16(this.size,e,!0),this.size+=2}}e.default=s},333:function(t,e,i){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=n(i(730));class s extends r.default{constructor(t){super(t),this.lastIndex=-1}clean(){super.clean(),this.lastIndex=-1}sliceUint8(t,e){return this.slice(Uint8Array,t,e)}sliceUint16(t,e){return this.slice(Uint16Array,t,e)}write3Uint8(t,e,i){this.view.setUint8(this.size,t),this.size+=1,this.view.setUint8(this.size,e),this.size+=1,this.view.setUint8(this.size,i),this.size+=1,this.lastIndex=Math.max(this.lastIndex,t,e,i)}write3Uint16(t,e,i){this.view.setUint16(this.size,t,!0),this.size+=2,this.view.setUint16(this.size,e,!0),this.size+=2,this.view.setUint16(this.size,i,!0),this.size+=2,this.lastIndex=Math.max(this.lastIndex,t,e,i)}write2Uint16(t,e){this.view.setUint16(this.size,t,!0),this.size+=2,this.view.setUint16(this.size,e,!0),this.size+=2,this.lastIndex=Math.max(this.lastIndex,t,e)}write1Uint16(t){this.view.setUint16(this.size,t,!0),this.size+=2,this.lastIndex=Math.max(this.lastIndex,t)}get nextIndex(){return this.lastIndex+1}}e.default=s},607:function(t,e,i){var n=this&&this.__createBinding||(Object.create?function(t,e,i,n){void 0===n&&(n=i),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[i]}})}:function(t,e,i,n){void 0===n&&(n=i),t[n]=e[i]}),r=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),s=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)"default"!==i&&Object.prototype.hasOwnProperty.call(t,i)&&n(e,t,i);return r(e,t),e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=o(i(522)),h=o(i(403)),l=o(i(770)),d=i(325),c=i(137),f=s(i(442)),u=s(i(447));!function(){const t=document.getElementById("particles").querySelector("canvas"),e=()=>{t.width=window.innerWidth,t.height=window.innerHeight};e(),window.addEventListener("resize",e),new a.default(t,400,new h.default("public/mask.png"))}(),function(){const t=document.getElementById("town"),e=t.querySelector("canvas"),i=t.querySelector("button"),n=e=>{const i=t.querySelector(`input[name=${e}]`),n=t.querySelector(`input[name=${e}] ~ span`),r=()=>n.innerHTML=i.value;return r(),i.addEventListener("input",r),()=>parseInt(i.value)},r={width:n("width"),depth:n("depth"),height:n("height"),roads:n("roads"),population:n("population"),vegetation:n("vegetation")},s=()=>{e.width=window.innerWidth,e.height=window.innerHeight};s(),window.addEventListener("resize",s);let o=null;const a=()=>{null==o||o.detach(),o=new l.default(e,new d.Color(.7,.64,.62,1),r.width(),r.height(),r.depth(),r.roads(),r.population(),r.vegetation())};a(),i.addEventListener("click",a)}(),function(){const t="landscape";document.getElementById(t).querySelector("button").addEventListener("click",(()=>{switch((0,c.getState)(t)){case c.State.DAY:(0,c.setState)(t,c.State.NIGHT);break;case c.State.NIGHT:(0,c.setState)(t,c.State.DAY)}}))}(),function(){const t={mill:[{name:"",handler:new Map([["Mill",f.ProgType.POINTS],["propeller",f.ProgType.POINTS]])},{name:"Утвердить требования",handler:new Map([["Mill",f.ProgType.LINES],["propeller",f.ProgType.LINES]])},{name:"Разработать прототип",handler:new Map([["Mill",f.ProgType.SIMPLE_LIGHT],["propeller",f.ProgType.LINES]])},{name:"Разработать рабочий прототип",handler:new Map([["Mill",f.ProgType.SIMPLE_LIGHT],["propeller",f.ProgType.SIMPLE_LIGHT]])},{name:"Рефакторинг",handler:new Map([["Mill",f.ProgType.SPECULAR_LIGHT],["propeller",f.ProgType.SPECULAR_LIGHT]])}],grass:[{name:"Прояснить требования",handler:new Map([["Green_platform",f.ProgType.POINTS],["Island",f.ProgType.POINTS]])},{name:"Утвердить требования",handler:new Map([["Green_platform",f.ProgType.LINES],["Island",f.ProgType.LINES]])},{name:"Насыпать землю",handler:new Map([["Green_platform",f.ProgType.LINES],["Island",f.ProgType.SIMPLE_LIGHT]])},{name:"Посадить газон",handler:new Map([["Green_platform",f.ProgType.SIMPLE_LIGHT],["Island",f.ProgType.SIMPLE_LIGHT]])},{name:"Рефакторинг",handler:new Map([["Green_platform",f.ProgType.SPECULAR_LIGHT],["Island",f.ProgType.SPECULAR_LIGHT]])}],tree:[{name:"Прояснить требования",handler:new Map([["Tree",f.ProgType.POINTS],["N/A",f.ProgType.POINTS]])},{name:"Утвердить требования",handler:new Map([["Tree",f.ProgType.LINES],["N/A",f.ProgType.LINES]])},{name:"Поставить ствол",handler:new Map([["Tree",f.ProgType.SIMPLE_LIGHT],["N/A",f.ProgType.LINES]])},{name:"Наклеить листву",handler:new Map([["Tree",f.ProgType.SIMPLE_LIGHT],["N/A",f.ProgType.SIMPLE_LIGHT]])},{name:"Рефакторинг",handler:new Map([["Tree",f.ProgType.SPECULAR_LIGHT],["N/A",f.ProgType.SPECULAR_LIGHT]])}]},e=document.getElementById("obj"),i=e.querySelector("canvas"),n={};for(const i of Object.keys(t))n[i]={e:e.querySelector(`button[name=${i}]`),reset:e.querySelector(`button[name=${i}] ~ button`)};const r=()=>{i.width=window.innerWidth,i.height=window.innerHeight};r(),window.addEventListener("resize",r);const s=(0,f.loadObjFile)("public/low-poly-mill.obj"),o=(0,f.loadMtlFile)("public/low-poly-mill.mtl");Promise.all([s,o]).then((e=>{const r=new f.default(i,e[0],e[1],3.1,[0,0,0]);for(const[e,i]of Object.entries(n)){let n=0;const s=t[e],o=()=>{n=Math.min(n+1,s.length-1),i.e.innerHTML=s[Math.min(n+1,s.length-1)].name,s[n].handler.forEach(((t,e)=>r.setProperty(e,t)))},a=()=>{n=0,i.e.innerHTML=s[n+1].name,i.reset.innerHTML="Начать заново",s[n].handler.forEach(((t,e)=>r.setProperty(e,t)))};i.e.addEventListener("click",o),i.reset.addEventListener("click",a),a()}}))}(),function(){const t=document.getElementById("snake"),e=t.querySelector("canvas"),i=new u.default(e),n=(e,n)=>{t.querySelector(`button[name=${e}]`).addEventListener("click",(()=>i.setDirection(n)))};n("up",u.Direction.UP),n("left",u.Direction.LEFT),n("down",u.Direction.DOWN),n("right",u.Direction.RIGHT);const r={ArrowUp:u.Direction.UP,ArrowLeft:u.Direction.LEFT,ArrowDown:u.Direction.DOWN,ArrowRight:u.Direction.RIGHT};document.addEventListener("keydown",(t=>{if(i.visible)for(const[e,n]of Object.entries(r))t.key===e&&(t.preventDefault(),i.setDirection(n))}))}()},137:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.setState=e.getState=e.State=void 0,function(t){t.DAY="day",t.NIGHT="night"}(i=e.State||(e.State={})),e.getState=function(t){return null!==document.querySelector(`#${t} .${i.DAY}`)?i.DAY:i.NIGHT},e.setState=function(t,e){const n=e===i.DAY?i.NIGHT:i.DAY,r=document.querySelector(`#${t} .${n}`);null!==r&&r.classList.replace(n,e)}},442:function(t,e,i){var n=this&&this.__awaiter||function(t,e,i,n){return new(i||(i=Promise))((function(r,s){function o(t){try{h(n.next(t))}catch(t){s(t)}}function a(t){try{h(n.throw(t))}catch(t){s(t)}}function h(t){var e;t.done?r(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(o,a)}h((n=n.apply(t,e||[])).next())}))},r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.ProgType=e.loadMtlFile=e.loadObjFile=void 0;const s=r(i(391)),o=i(674),a=r(i(921)),h=r(i(146)),l=r(i(333)),d=i(300),c=r(i(126));var f;e.loadObjFile=function(t){return n(this,void 0,void 0,(function*(){const e=yield fetch(t),i=yield e.text();return s.default.parse(i)}))},e.loadMtlFile=function(t){return n(this,void 0,void 0,(function*(){const e=yield fetch(t),i=yield e.text();return(0,o.parseMTL)(i)}))},function(t){t[t.DO_NOT_DRAW=0]="DO_NOT_DRAW",t[t.POINTS=1]="POINTS",t[t.LINES=2]="LINES",t[t.SIMPLE_LIGHT=3]="SIMPLE_LIGHT",t[t.SPECULAR_LIGHT=4]="SPECULAR_LIGHT"}(f=e.ProgType||(e.ProgType={})),e.default=class{constructor(t,e,i,n,r){this.progs=new Map,this.vertexBuffer=new h.default(1),this.indexBuffer=new l.default(1),this.cameraRotation=0,this.rotationSpeed=Math.PI/200,e.geometries.forEach((t=>t.name=t.name||"N/A")),this.el=t,this.obj=e,this.mtl=i,this.prop=new Map(this.obj.geometries.map((t=>[t.name,f.SIMPLE_LIGHT]))),this.background=[...r,1],this.objCoordRange=e.getSize(),this.initGLContext(),this.compilePrograms(n),this.fillBuffers(),this.drawNextFrame()}initGLContext(){const t=new a.default(this.el,"void main() { gl_Position = vec4(0, 0, 0, 0); }","void main() { gl_FragColor = vec4(0, 0, 0, 0); }",[],[]).gl;t.enable(t.DEPTH_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),this.glVertexBuffer=t.createBuffer(),this.glIndexBuffer=t.createBuffer()}compilePrograms(t){const e=`\n          attribute vec4 a_position;\n          attribute vec3 a_normal;\n        \n          uniform mat4 u_worldMatrix;\n          uniform mat4 u_worldProjectionMatrix;\n          uniform vec3 u_viewWorldPosition; // camera\n        \n          varying vec3 v_normal;\n          varying vec3 v_surfaceToView;\n        \n          void main() {\n            gl_Position = u_worldProjectionMatrix * a_position;\n            gl_PointSize = ${t};\n            v_normal = mat3(u_worldMatrix) * a_normal;\n            // vector vertex->camera\n            v_surfaceToView = u_viewWorldPosition - (u_worldMatrix * a_position).xyz;\n          }\n        `,i=["a_position","a_normal"],n=["u_worldMatrix","u_worldProjectionMatrix","u_lightDirection","u_viewWorldPosition","diffuse","ambient","u_ambientLight","emissive","specular","shininess","opacity"];{const t="\n                #ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                #else\n                    precision mediump float;\n                #endif\n                \n                varying vec3 v_normal;\n                varying vec3 v_surfaceToView;\n              \n                // material color\n                uniform vec3 diffuse;\n                // uniform sampler2D diffuseMap;\n                \n                // ambient light (sky, sun, ...)\n                uniform vec3 ambient;\n                uniform vec3 u_ambientLight;\n                \n                // light, which is generated by material\n                uniform vec3 emissive;\n                \n                // reflection light and its force\n                uniform vec3 specular;\n                // uniform sampler2D specularMap;\n                uniform float shininess; // 1 - strong, 2 - smooth\n                \n                uniform float opacity;\n                \n                uniform vec3 u_lightDirection;\n              \n                void main () {\n                  vec4 v_color = vec4(1, 1, 1, 1);\n                  vec3 normal = normalize(v_normal);\n              \n                  vec3 surfaceToViewDirection = normalize(v_surfaceToView);\n                  \n                  // vector between camera and light \n                  vec3 halfVector = normalize(u_lightDirection + surfaceToViewDirection);\n                  float specularLight = clamp(dot(normal, halfVector), 0.0, 1.0);\n                  //vec4 specularMapColor = texture2D(specularMap, v_texcoord);\n                  vec4 specularMapColor = vec4(1, 1, 1, 1);\n                  vec3 effectiveSpecular = specular * specularMapColor.rgb;\n              \n                  float fakeLight = dot(u_lightDirection, normal) * .25;\n                  //vec4 diffuseMapColor = texture2D(diffuseMap, v_texcoord);\n                  vec4 diffuseMapColor = vec4(1, 1, 1, 1);\n                  vec3 effectiveDiffuse = diffuse * diffuseMapColor.rgb * v_color.rgb;\n                  float effectiveOpacity = opacity * diffuseMapColor.a * v_color.a;\n              \n                  gl_FragColor = vec4(\n                      emissive +\n                      ambient * u_ambientLight +\n                      effectiveDiffuse * fakeLight +\n                      effectiveSpecular * pow(specularLight, shininess),\n                      effectiveOpacity);\n                }\n            ";this.progs.set(f.SPECULAR_LIGHT,new a.default(this.el,e,t,i,n))}{const t="\n                #ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                #else\n                    precision mediump float;\n                #endif\n                \n                varying vec3 v_normal;\n                varying vec3 v_surfaceToView;\n              \n                uniform vec3 diffuse;\n                uniform vec3 ambient;\n                uniform vec3 u_ambientLight;\n                uniform vec3 emissive;\n                uniform vec3 specular;\n                uniform float shininess;\n                uniform float opacity;\n                uniform vec3 u_lightDirection;\n              \n                void main () {\n                  vec3 normal = normalize(v_normal);\n                  vec3 lightDirection = normalize(u_lightDirection);\n                  \n                  float light = dot(normal, lightDirection);\n                  \n                  gl_FragColor = vec4(normalize(diffuse) * light, 1);\n                }\n            ";this.progs.set(f.SIMPLE_LIGHT,new a.default(this.el,e,t,i,n))}{const t="\n                #ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                #else\n                    precision mediump float;\n                #endif\n                \n                varying vec3 v_normal;\n                varying vec3 v_surfaceToView;\n              \n                uniform vec3 diffuse;\n                uniform vec3 ambient;\n                uniform vec3 u_ambientLight;\n                uniform vec3 emissive;\n                uniform vec3 specular;\n                uniform float shininess;\n                uniform float opacity;\n                uniform vec3 u_lightDirection;\n              \n                void main () {\n                  gl_FragColor = vec4(normalize(diffuse), 1);\n                }\n            ";this.progs.set(f.LINES,new a.default(this.el,e,t,i,n))}{const t="\n                #ifdef GL_FRAGMENT_PRECISION_HIGH\n                    precision highp float;\n                #else\n                    precision mediump float;\n                #endif\n                \n                varying vec3 v_normal;\n                varying vec3 v_surfaceToView;\n              \n                uniform vec3 diffuse;\n                uniform vec3 ambient;\n                uniform vec3 u_ambientLight;\n                uniform vec3 emissive;\n                uniform vec3 specular;\n                uniform float shininess;\n                uniform float opacity;\n                uniform vec3 u_lightDirection;\n              \n                void main () {\n                  gl_FragColor = vec4(normalize(diffuse), 1);\n                }\n            ";this.progs.set(f.POINTS,new a.default(this.el,e,t,i,n))}}fillBuffers(){this.vertexBuffer.reserveAndClean(3*this.obj.getTriangleCount()*(6*Float32Array.BYTES_PER_ELEMENT)),this.indexBuffer.reserveAndClean(3*this.obj.getTriangleCount()*Uint16Array.BYTES_PER_ELEMENT);for(const t of this.obj.geometries)for(const e of t.triangles){const t=this.obj.getPositionOf(e[0]),i=this.obj.getPositionOf(e[1]),n=this.obj.getPositionOf(e[2]),r=[t[0]-i[0],t[1]-i[1],t[2]-i[2]],s=[t[0]-n[0],t[1]-n[1],t[2]-n[2]],o=[r[1]*s[2]-r[2]*s[1],-r[0]*s[2]+r[2]*s[0],r[0]*s[1]-r[1]*s[0]];for(const e of[t,i,n])this.vertexBuffer.write3Float32(...e),this.vertexBuffer.write3Float32(...o),this.indexBuffer.write1Uint16(this.indexBuffer.nextIndex)}const t=Float32Array.BYTES_PER_ELEMENT;for(const e of this.progs.values()){const i=e.gl;e.arrayBuffer(this.glVertexBuffer,6*t,{a_position:{elems:3,elType:i.FLOAT,normalized:!1,offsetBytes:0},a_normal:{elems:3,elType:i.FLOAT,normalized:!1,offsetBytes:3*t}},this.vertexBuffer.sliceFloat32()),e.indexBuffer(this.glIndexBuffer,this.indexBuffer.sliceUint16())}}drawNextFrame(){window.requestAnimationFrame(this.drawNextFrame.bind(this));const t=this.progs.values().next().value.gl;if((0,d.isVisible)(t)){(0,d.resizeContext)(t),t.clearColor(...this.background),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);{this.cameraRotation-=this.rotationSpeed,this.cameraRotation<2*-Math.PI&&(this.cameraRotation=0);const e=[0,0,0];for(let t=0;t<3;++t)e[t]=this.objCoordRange.min[t]+(this.objCoordRange.max[t]-this.objCoordRange.min[t])/2;const i=c.default.XRotate(Math.PI/6).yRotate(this.cameraRotation).translate(-e[0],-e[1],-e[2]),n=1.2*Math.sqrt(Math.pow(this.objCoordRange.max[0]-this.objCoordRange.min[0],2)+Math.pow(this.objCoordRange.max[1]-this.objCoordRange.min[1],2)+Math.pow(this.objCoordRange.max[2]-this.objCoordRange.min[2],2)),r=n/1e3,s=3*n,o=t.canvas.clientWidth/t.canvas.clientHeight,a=[0,0,n],h=c.default.Perspective(60*Math.PI/180,o,r,s);h.multiply(c.default.LookAt(a[0],a[1],a[2],0,0,0,0,1,0)),h.multiply(i);let l=0;for(const e of this.obj.geometries){const n=this.prop.get(e.name);if(void 0===n||n===f.DO_NOT_DRAW){l+=3*e.triangles.length;continue}const r=this.progs.get(n);r.useProgram(),r.uniformMatrix("u_worldMatrix",i.data),r.uniformMatrix("u_worldProjectionMatrix",h.data),r.uniformVector("u_lightDirection",1,3,5),r.uniformVector("u_viewWorldPosition",...a);const s=this.mtl.get(e.material||"");r.uniformVector("diffuse",...(null==s?void 0:s.diffuse)||[1,1,1]),r.uniformVector("ambient",...(null==s?void 0:s.ambient)||[0,0,0]),r.uniformVector("u_ambientLight",.1,.1,.1),r.uniformVector("emissive",...(null==s?void 0:s.emissive)||[0,0,0]),r.uniformVector("specular",...(null==s?void 0:s.specular)||[1,1,1]),r.uniformVector("shininess",(null==s?void 0:s.shininess)||400),r.uniformVector("opacity",(null==s?void 0:s.opacity)||1);const o=3*e.triangles.length,d=n===f.POINTS?t.POINTS:n===f.LINES?t.LINE_LOOP:t.TRIANGLES;r.drawElements(d,o,t.UNSIGNED_SHORT,l*Uint16Array.BYTES_PER_ELEMENT),l+=o}}}}get objectNames(){return this.obj.geometries.map((t=>t.name))}setProperty(t,e){this.prop.set(t,e)}}},403:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(t){this.mask=null,this.w=0,this.h=0,this.scaledW=0,this.scaledH=0,this.canvasW=0,this.canvasH=0,this.scale=1;const e=new Image;e.crossOrigin="anonymous",e.onload=this.onMaskLoaded.bind(this,e),e.src=t}updateScale(t,e){this.mask&&(this.canvasW=t,this.canvasH=e,this.scale=Math.min(t/this.w,e/this.h),this.scaledW=this.w*this.scale,this.scaledH=this.h*this.scale)}toMaskPixelCoordinate(t,e){let i=Math.abs(this.scaledW-this.canvasW)/2,n=Math.abs(this.scaledH-this.canvasH)/2;return i>n?n=0:i=0,[(t-i)/this.scale|0,(e-n)/this.scale|0]}isIntersect(t,e){return!this.mask||([t,e]=this.toMaskPixelCoordinate(t,e),this.read(t,e))}isConnected(t,e,i,n){if(!this.mask)return!0;if([t,e]=this.toMaskPixelCoordinate(t,e),[i,n]=this.toMaskPixelCoordinate(i,n),t===i){const i=Math.min(e,n),r=Math.max(e,n);for(let e=i;e<=r;++e)if(!this.read(t,e))return!1;return!0}const r=(e-n)/(t-i),s=e-t*r;if(Math.abs(r)>=1){const t=Math.min(e,n),i=Math.max(e,n);for(let e=t;e<=i;++e)if(!this.read((e-s)/r|0,e))return!1;return!0}{const e=Math.min(t,i),n=Math.max(t,i);for(let t=e;t<=n;++t)if(!this.read(t,r*t+s|0))return!1;return!0}}read(t,e){if(this.mask){if(t<this.w&&e<this.h&&t>=0&&e>=0){const i=this.w*e+t;return 0!==this.mask[i]}return!1}return!0}write(t,e,i){if(this.mask){const n=this.w*e+t;this.mask[n]=i?1:0}}onMaskLoaded(t){const e=document.createElement("canvas"),i=this.w=e.width=t.width,n=this.h=e.height=t.height,r=e.getContext("2d");r.drawImage(t,0,0);const s=r.getImageData(0,0,i,n),o=new Uint32Array(s.data.buffer);this.mask=new Int8Array(this.w*this.h);for(let t=0;t<n;++t)for(let e=0;e<i;++e){const i=(16777215&o[s.width*t+e])>0;this.write(e,t,i)}}}},299:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(t,e){this.x=Math.random()*t,this.y=Math.random()*e;const i=Math.random()*Math.PI*2;this.vx=2*Math.cos(i),this.vy=2*Math.sin(i)}update(t,e){this.x+=this.vx,this.y+=this.vy;let i=!0;this.x<0?this.x=0:this.x>t?this.x=t:i=!1,i&&(this.vx*=-1);let n=!0;this.y<0?this.y=0:this.y>e?this.y=e:n=!1,n&&(this.vy*=-1)}}},522:function(t,e,i){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=n(i(299)),s=i(300),o=n(i(921)),a=n(i(146)),h=n(i(333));e.default=class{constructor(t,e,i){this.vertexBuffer=new a.default(1),this.indexBuffer=new h.default(1),this.particles=[],this.springConst=25e-6,this.el=t,this.mask=i;const n=this.el.clientWidth,s=this.el.clientHeight;for(let t=0;t<e;++t)this.particles.push(new r.default(n,s));this.initGLContext(),this.drawNextFrame()}initGLContext(){this.lineProg=new o.default(this.el,"\n            attribute vec2 a_position;\n            \n            uniform vec2 u_resolution;\n\n            void main() {\n              // [0; +oo] -> [0; 1] -> [0; 2] -> [-1; 1]\n              vec2 clipSpace = a_position / u_resolution * 2.0 - 1.0;\n              gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n            }\n        ","\n            precision mediump float;\n            void main() {\n              gl_FragColor = vec4(0.75, 0.75, 0.75, 1); // #CCC\n            }\n        ",["a_position"],["u_resolution"]),this.pointProg=new o.default(this.el,"\n            attribute vec2 a_position;\n            \n            uniform vec2 u_resolution;\n            \n            varying vec2 v_pos;\n\n            void main() {\n              // [0; +oo] -> [0; 1] -> [0; 2] -> [-1; 1]\n              vec2 clipSpace = a_position / u_resolution * 2.0 - 1.0;\n              gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n              \n              gl_PointSize = 7.0;\n\n              v_pos = gl_Position.xy;\n            }\n        ","\n            precision mediump float;\n            \n            varying vec2 v_pos;\n\n            void main() {\n              if (abs(distance(v_pos, gl_FragCoord.xy)) < 10.0) {\n                discard;\n              }\n              \n              // [-1; 1] -> [0; 1] \n              gl_FragColor = vec4(v_pos * 0.5 + 0.5, 0.5, 1);\n            }\n        ",["a_position"],["u_resolution"]),this.glVertexBuffer=this.pointProg.createBuffer(),this.glIndexBuffer=this.pointProg.createBuffer()}drawNextFrame(){var t;window.requestAnimationFrame(this.drawNextFrame.bind(this));const e=this.lineProg.gl;if(!(0,s.isVisible)(e))return;(0,s.resizeContext)(e);const i=this.lineProg.width,n=this.lineProg.height;null===(t=this.mask)||void 0===t||t.updateScale(i,n);const r=2*this.particles.length*Uint16Array.BYTES_PER_ELEMENT;this.vertexBuffer.reserveAndClean(r);const o=this.particles.length*this.particles.length*2*Uint16Array.BYTES_PER_ELEMENT;this.indexBuffer.reserveAndClean(o),this.particles.forEach((t=>{t.update(i,n),this.vertexBuffer.write2Uint16(t.x,t.y)}));const a=10*i;for(let t=0;t<this.particles.length;++t){const e=this.particles[t];if(!this.mask||this.mask.isIntersect(e.x,e.y))for(let i=t+1;i<this.particles.length;++i){const n=this.particles[i];if(this.mask&&!this.mask.isIntersect(n.x,n.y))continue;const r=e.x-n.x,s=e.y-n.y;if(r*r+s*s<a){if(this.mask&&!this.mask.isConnected(e.x,e.y,n.x,n.y))continue;e.vx-=r*this.springConst,e.vy-=s*this.springConst,n.vx+=r*this.springConst,n.vy+=s*this.springConst,this.indexBuffer.write2Uint16(t,i)}}}e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT),this.lineProg.useProgram(),this.lineProg.arrayBuffer(this.glVertexBuffer,2*Uint16Array.BYTES_PER_ELEMENT,{a_position:{elems:2,elType:e.UNSIGNED_SHORT,normalized:!1,offsetBytes:0}},this.vertexBuffer.sliceUint16()),this.lineProg.indexBuffer(this.glIndexBuffer,this.indexBuffer.sliceUint16()),this.lineProg.uniformVector("u_resolution",i,n),this.lineProg.drawElements(e.LINES,this.indexBuffer.bytes/2,e.UNSIGNED_SHORT),this.indexBuffer.clean();for(let t=0;t<this.particles.length;++t)this.indexBuffer.write1Uint16(t);this.pointProg.useProgram(),this.pointProg.arrayBuffer(this.glVertexBuffer,2*Uint16Array.BYTES_PER_ELEMENT,{a_position:{elems:2,elType:e.UNSIGNED_SHORT,normalized:!1,offsetBytes:0}}),this.pointProg.indexBuffer(this.glIndexBuffer,this.indexBuffer.sliceUint16()),this.pointProg.uniformVector("u_resolution",i,n),this.pointProg.drawElements(e.POINTS,this.indexBuffer.bytes/2,e.UNSIGNED_SHORT)}}},425:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class i{constructor(t,e){this.arr=[[t,e]]}*[Symbol.iterator](){for(const t of this.arr)yield t}isSnake(t,e,i){return this.arr.some(((n,r)=>!(i&&0===r)&&n[0]===t&&n[1]===e))}add(t,e){this.arr.push([t,e])}move(t,e){this.arr.shift(),this.add(t,e)}get length(){return this.arr.length}get head(){return this.arr[this.arr.length-1]}}e.default=i},447:function(t,e,i){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Direction=void 0;const r=i(300),s=n(i(921)),o=n(i(146)),a=n(i(333)),h=n(i(425));var l;!function(t){t[t.UP=0]="UP",t[t.DOWN=1]="DOWN",t[t.LEFT=2]="LEFT",t[t.RIGHT=3]="RIGHT"}(l=e.Direction||(e.Direction={}));class d{constructor(t){this.vertexBuffer=new o.default(d.width*d.height*16*Float32Array.BYTES_PER_ELEMENT),this.indexBuffer=new a.default(d.width*d.height*8*Uint16Array.BYTES_PER_ELEMENT),this.el=t,this.initGLContext(),this.initVertexBuffer(),this.initGameField(),this.drawNextFrame()}initGLContext(){this.prog=new s.default(this.el,"\n            attribute vec2 a_position;\n\n            void main() {\n              gl_Position = vec4(a_position, 0, 1);\n            }\n        ","\n            precision mediump float;\n            uniform vec3 u_color;\n            \n            void main() {\n              gl_FragColor = vec4(u_color, 1.0);\n            }\n        ",["a_position"],["u_color"]),this.glVertexBuffer=this.prog.createBuffer(),this.glIndexBuffer=this.prog.createBuffer()}initVertexBuffer(){const t=2/d.width,e=2/d.height,i=t*d.fill/2,n=e*d.fill/2;for(let r=0;r<d.height;++r)for(let s=0;s<d.width;++s)this.vertexBuffer.write2Float32((s+0)*t+i-1,(r+0)*e+n-1),this.vertexBuffer.write2Float32((s+0)*t+i-1,(r+1)*e-n-1),this.vertexBuffer.write2Float32((s+1)*t-i-1,(r+1)*e-n-1),this.vertexBuffer.write2Float32((s+1)*t-i-1,(r+0)*e+n-1),this.vertexBuffer.write2Float32((s+0)*t-1,(r+0)*e-1),this.vertexBuffer.write2Float32((s+0)*t-1,(r+1)*e-1),this.vertexBuffer.write2Float32((s+1)*t-1,(r+1)*e-1),this.vertexBuffer.write2Float32((s+1)*t-1,(r+0)*e-1);const r=this.prog.gl;this.prog.useProgram(),this.prog.arrayBuffer(this.glVertexBuffer,2*Float32Array.BYTES_PER_ELEMENT,{a_position:{elems:2,elType:r.FLOAT,normalized:!1,offsetBytes:0}},this.vertexBuffer.sliceFloat32())}static writePixelIndex(t,e,i){const n=8*(i*d.width+e);t.write3Uint16(n,n+1,n+3),t.write3Uint16(n+1,n+2,n+3)}static writeBorderIndex(t,e,i){const n=8*(i*d.width+e)+4;t.write2Uint16(n,n+1),t.write2Uint16(n+1,n+2),t.write2Uint16(n+2,n+3),t.write2Uint16(n+3,n)}static randomApple(t){const e=d.width*d.height-t.length;let i=Math.round(Math.random()*e);for(let e=0;e<d.height;++e)for(let n=0;n<d.width;++n)if(!t.isSnake(n,e,!1)){if(0===i)return[n,e];--i}return[Math.trunc(Math.random()*d.width),Math.trunc(Math.random()*d.height)]}static nextSnakeHead(t,e){const i=e==l.LEFT?-1:e==l.RIGHT?1:0,n=-(e==l.UP?-1:e==l.DOWN?1:0),r=t.head,s=(r[0]+i)%d.width,o=(r[1]+n)%d.height;return[s<0?s+d.width:s,o<0?o+d.height:o]}initGameField(){this.snake=new h.default(Math.round(d.width/2),Math.round(d.height/2)),this.direction=l.UP,this.apple=d.randomApple(this.snake),this.speed=500}updateGameField(){const t=d.nextSnakeHead(this.snake,this.direction);t[0]===this.apple[0]&&t[1]===this.apple[1]?(this.snake.add(t[0],t[1]),this.apple=d.randomApple(this.snake),this.speed=Math.max(d.speed_max,this.speed-d.speed_delta)):this.snake.isSnake(...t,!0)?this.initGameField():this.snake.move(t[0],t[1])}drawNextFrame(){setTimeout(this.drawNextFrame.bind(this),this.speed),this.updateGameField();const t=this.prog.gl;(0,r.resizeContext)(t),t.clearColor(137/255,151/255,116/255,1),t.clear(t.COLOR_BUFFER_BIT),this.prog.useProgram(),this.prog.uniformVector("u_color",131/255,141/255,114/255),this.indexBuffer.clean();for(let t=0;t<d.height;++t)for(let e=0;e<d.width;++e)d.writePixelIndex(this.indexBuffer,e,t);this.prog.indexBuffer(this.glIndexBuffer,this.indexBuffer.sliceUint16()),this.prog.drawElements(t.TRIANGLES,this.indexBuffer.bytes/2,t.UNSIGNED_SHORT),this.indexBuffer.clean();for(let t=0;t<d.height;++t)for(let e=0;e<d.width;++e)d.writeBorderIndex(this.indexBuffer,e,t);this.prog.indexBuffer(this.glIndexBuffer,this.indexBuffer.sliceUint16()),this.prog.drawElements(t.LINES,this.indexBuffer.bytes/2,t.UNSIGNED_SHORT),this.prog.uniformVector("u_color",0,0,0),this.indexBuffer.clean();for(const t of this.snake)d.writePixelIndex(this.indexBuffer,t[0],t[1]);d.writePixelIndex(this.indexBuffer,this.apple[0],this.apple[1]),this.prog.indexBuffer(this.glIndexBuffer,this.indexBuffer.sliceUint16()),this.prog.drawElements(t.TRIANGLES,this.indexBuffer.bytes/2,t.UNSIGNED_SHORT),this.indexBuffer.clean();for(const t of this.snake)d.writeBorderIndex(this.indexBuffer,t[0],t[1]);d.writeBorderIndex(this.indexBuffer,this.apple[0],this.apple[1]),this.prog.indexBuffer(this.glIndexBuffer,this.indexBuffer.sliceUint16()),this.prog.drawElements(t.LINES,this.indexBuffer.bytes/2,t.UNSIGNED_SHORT)}setDirection(t){const e=d.nextSnakeHead(this.snake,t);this.snake.isSnake(...e,!0)||(this.direction=t)}get visible(){return(0,r.isVisible)(this.prog.gl)}}e.default=d,d.width=10,d.height=20,d.fill=.4,d.speed_max=100,d.speed_delta=30},770:function(t,e,i){var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=i(300),s=i(325),o=n(i(126)),a=n(i(146)),h=n(i(333)),l=n(i(921));class d{constructor(t,e,i,n,r,s,o,l){this.grid=[],this.gridSize=200,this.maxHeight=600,this.minHeight=100,this.vertexBuffer=new a.default(1),this.indexBuffer=new h.default(1),this.staticTriangles=0,this.cameraRotation=0,this.rotationSpeed=Math.PI/1e3,this.paused=!1,this.el=t,this.bgColor=e,this.gridWidth=i,this.gridHeight=r,this.heightFactor=5/n,this.roads=s,this.population=Math.min(o/10,1),this.vegetation=Math.min(l/10,1),this.initGLContext(),this.generateGrid(),this.fillStaticBuffers(),this.drawNextFrame()}initGLContext(){this.glProg=new l.default(this.el,"\n            attribute vec4 a_position;\n            attribute vec3 a_normal;\n            attribute vec4 a_color;\n\n            uniform mat4 u_worldMatrix;\n            uniform mat4 u_worldProjectionMatrix;\n\n            varying vec4 v_color;\n            varying vec3 v_normal;\n\n            void main() {\n              gl_Position = u_worldProjectionMatrix * a_position;\n              v_color = a_color;\n              v_normal = mat3(u_worldMatrix) * a_normal;\n            }\n        ","\n            #ifdef GL_FRAGMENT_PRECISION_HIGH\n                precision highp float;\n            #else\n                precision mediump float;\n            #endif\n            \n            uniform vec3 u_lightDirection;\n\n            varying vec4 v_color;\n            varying vec3 v_normal;\n\n            void main() {\n                vec3 normal = normalize(v_normal);\n                vec3 lightDirection = normalize(u_lightDirection);\n                \n                float light = dot(normal, -lightDirection);\n            \n                gl_FragColor = v_color;\n                gl_FragColor.rgb *= light;\n            }\n        ",["a_position","a_normal","a_color"],["u_worldMatrix","u_worldProjectionMatrix","u_lightDirection"]),this.glProg.gl.enable(this.glProg.gl.CULL_FACE),this.glProg.gl.cullFace(this.glProg.gl.BACK),this.glProg.gl.enable(this.glProg.gl.DEPTH_TEST),this.glVertexBuffer=this.glProg.createBuffer(),this.glIndexBuffer=this.glProg.createBuffer(),this.glDynamicVertexBuffer=this.glProg.createBuffer(),this.glDynamicIndexBuffer=this.glProg.createBuffer()}generateGrid(){this.grid=[];for(let t=0;t<this.gridWidth;++t){this.grid[t]=[];for(let e=0;e<this.gridHeight;++e)this.grid[t][e]=[],Math.random()<=this.population?this.grid[t][e].push(new s.House(this.gridSize,(0,s.calcHeight)(t,e,this.gridWidth,this.gridHeight,this.heightFactor,this.maxHeight,this.minHeight),s.PALLETS[Math.trunc(Math.random()*s.PALLETS.length)])):Math.random()<=this.vegetation&&this.grid[t][e].push(new s.Tree(this.gridSize))}const t=new Set,e=new Set;for(let e=0;e<this.roads;e+=2){const e=Math.trunc(Math.random()*this.gridWidth);for(let i=0;i<this.gridWidth;++i){const n=(e+i)%this.gridWidth;if(!(t.has(n)||t.has(n-1)||t.has(n+1))){t.add(n);break}}}for(let t=1;t<this.roads;t+=2){const t=Math.trunc(Math.random()*this.gridHeight);for(let i=0;i<this.gridHeight;++i){const n=(t+i)%this.gridHeight;if(!(e.has(n)||e.has(n-1)||e.has(n+1))){e.add(n);break}}}for(const t of e)for(let e=0;e<this.gridWidth;++e)this.grid[e][t]=[new s.Road(this.gridSize,s.RoadDirection.X)];for(const e of t)for(let t=0;t<this.gridHeight;++t)this.grid[e][t]=[new s.Road(this.gridSize,s.RoadDirection.Y)];for(const i of e)for(const e of t)this.grid[e][i]=[new s.Road(this.gridSize,s.RoadDirection.LINK)]}static reserveBuffers(t,e,i){t.reserveAndClean(3*i*(3*Float32Array.BYTES_PER_ELEMENT+3*Float32Array.BYTES_PER_ELEMENT+4)),e.reserveAndClean(3*i*Uint16Array.BYTES_PER_ELEMENT)}static bindArrayBuffer(t,e,i){const n=t.gl,r=Float32Array.BYTES_PER_ELEMENT;t.arrayBuffer(e,6*r+4,{a_position:{elems:3,elType:n.FLOAT,normalized:!1,offsetBytes:0},a_normal:{elems:3,elType:n.FLOAT,normalized:!1,offsetBytes:3*r},a_color:{elems:4,elType:n.UNSIGNED_BYTE,normalized:!0,offsetBytes:6*r}},null==i?void 0:i.sliceFloat32())}static bindIndexBuffer(t,e,i){t.indexBuffer(e,null==i?void 0:i.sliceUint16())}static writeBuffers(t,e,i,n,r){i.forEach(((i,s)=>i.forEach(((i,o)=>{const a=t.bytes;if(i.forEach((i=>r(i,t,e))),t.bytes>a){const e=t.sliceFloat32(a);for(let t=0;t<e.length;t+=7)e[t+0]+=n*s,e[t+1]+=n*o}}))))}fillStaticBuffers(){const t=this.grid.flatMap((t=>t)).flatMap((t=>t)).reduce(((t,e)=>t+e.getTriangleCount()),0);d.reserveBuffers(this.vertexBuffer,this.indexBuffer,t),d.writeBuffers(this.vertexBuffer,this.indexBuffer,this.grid,this.gridSize,((t,e,i)=>t.writeObject(e,i))),this.glProg.useProgram(),d.bindArrayBuffer(this.glProg,this.glVertexBuffer,this.vertexBuffer),d.bindIndexBuffer(this.glProg,this.glIndexBuffer,this.indexBuffer),this.staticTriangles=this.indexBuffer.bytes/2}drawNextFrame(){if(this.paused)return;window.requestAnimationFrame(this.drawNextFrame.bind(this));const t=this.glProg.gl;if(!(0,r.isVisible)(t))return;(0,r.resizeContext)(t),t.clearColor(this.bgColor.r,this.bgColor.g,this.bgColor.b,this.bgColor.a),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);let e=0;this.grid.forEach((t=>t.forEach((t=>t.forEach((t=>{t.frameUpdate(),e+=t.getDynamicTriangleCount()})))))),d.reserveBuffers(this.vertexBuffer,this.indexBuffer,e),d.writeBuffers(this.vertexBuffer,this.indexBuffer,this.grid,this.gridSize,((t,e,i)=>t.writeDynamicObject(e,i))),this.glProg.useProgram();{this.cameraRotation-=this.rotationSpeed,this.cameraRotation<2*-Math.PI&&(this.cameraRotation=0);const t=this.gridWidth*this.gridSize/2,e=this.gridHeight*this.gridSize/2,i=Math.max(this.gridWidth,this.gridHeight)*this.gridSize,n=i/2,r=Math.sin(this.cameraRotation)*i+n,s=-Math.cos(this.cameraRotation)*i+n,a=n,h=o.default.LookAt(r,s,a,t,e,0,0,0,1),l=o.default.Ortho(-this.glProg.width,this.glProg.width,-this.glProg.height,this.glProg.height,-1e4,1e4);l.multiply(h),this.glProg.uniformMatrix("u_worldMatrix",h.data),this.glProg.uniformMatrix("u_worldProjectionMatrix",l.data),this.glProg.uniformVector("u_lightDirection",-.2,-.5,-1)}d.bindArrayBuffer(this.glProg,this.glVertexBuffer),d.bindIndexBuffer(this.glProg,this.glIndexBuffer),this.glProg.drawElements(t.TRIANGLES,this.staticTriangles,t.UNSIGNED_SHORT),d.bindArrayBuffer(this.glProg,this.glDynamicVertexBuffer,this.vertexBuffer),d.bindIndexBuffer(this.glProg,this.glDynamicIndexBuffer,this.indexBuffer),this.glProg.drawElements(t.TRIANGLES,this.indexBuffer.bytes/2,t.UNSIGNED_SHORT)}detach(){this.paused=!0,this.glProg.deleteBuffer(this.glVertexBuffer),this.glProg.deleteBuffer(this.glIndexBuffer),this.glProg.deleteBuffer(this.glDynamicVertexBuffer),this.glProg.deleteBuffer(this.glDynamicIndexBuffer),this.glProg.destroyProgram()}}e.default=d},325:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.calcHeight=e.PALLETS=e.Color=e.Road=e.RoadDirection=e.Tree=e.Antenna=e.Windows=e.Roof=e.House=e.DebugFloor=e.TownObject=void 0;const n=i(109);class r{getTriangleCount(){return 0}writeObject(t,e){}getDynamicTriangleCount(){return 0}writeDynamicObject(t,e){}frameUpdate(){}}var s,o;e.TownObject=r,e.DebugFloor=class extends r{constructor(t){super(),this.width=t,this.color=f.RandomColor()}getTriangleCount(){return 2}writeObject(t,e){u(t,e,(0,n.XYPlane)(this.width,this.width),this.color)}},e.House=class extends r{constructor(t,e,i){super(),this.height=e,this.color=i,this.width=t/(3*Math.random()+1),this.depth=t/(3*Math.random()+1),this.x=(t-this.width)/(5*Math.random()+1),this.y=(t-this.depth)/(5*Math.random()+1),this.roof=Math.random()>.33?new a(i,this.x,this.y,e,this.width,this.depth):void 0,this.windows=new h(i,this.x,this.y,this.width,this.height,this.depth),this.antenna=Math.random()<=.3?new l(this.x,this.y,this.height,this.width,this.depth):void 0}frameUpdate(){var t,e;super.frameUpdate(),null===(t=this.roof)||void 0===t||t.frameUpdate(),this.windows.frameUpdate(),null===(e=this.antenna)||void 0===e||e.frameUpdate()}getDynamicTriangleCount(){var t,e;return super.getDynamicTriangleCount()+((null===(t=this.roof)||void 0===t?void 0:t.getDynamicTriangleCount())||0)+this.windows.getDynamicTriangleCount()+((null===(e=this.antenna)||void 0===e?void 0:e.getDynamicTriangleCount())||0)}writeDynamicObject(t,e){var i,n;super.writeDynamicObject(t,e),null===(i=this.roof)||void 0===i||i.writeDynamicObject(t,e),this.windows.writeDynamicObject(t,e),null===(n=this.antenna)||void 0===n||n.writeDynamicObject(t,e)}getTriangleCount(){var t,e;return 12+((null===(t=this.roof)||void 0===t?void 0:t.getTriangleCount())||0)+this.windows.getTriangleCount()+((null===(e=this.antenna)||void 0===e?void 0:e.getTriangleCount())||0)}writeObject(t,e){var i,r;const s=(0,n.Cuboid)(this.width,this.depth,this.height);(0,n.translate)(s,this.x,this.y,0),u(t,e,s,this.color),null===(i=this.roof)||void 0===i||i.writeObject(t,e),this.windows.writeObject(t,e),null===(r=this.antenna)||void 0===r||r.writeObject(t,e)}},function(t){t[t.X=0]="X",t[t.Y=1]="Y"}(s||(s={}));class a extends r{constructor(t,e,i,n,r,o){super(),this.houseColor=t,this.x=e,this.y=i,this.z=n,this.w=r,this.d=o,this.type=Math.random()<=.5?s.X:s.Y,this.roofColor=new f(70,70,70,t.a)}getTriangleCount(){return 6}writeObject(t,e){if(this.type===s.X){const i=(0,n.Plane45deg)(this.w,this.d/2,a.ROOF_HEIGHT,!0,n.PlaneRotate.X);(0,n.translate)(i,this.x,this.y,this.z),u(t,e,i,this.roofColor);const r=(0,n.Plane45deg)(this.w,this.d/2,a.ROOF_HEIGHT,!1,n.PlaneRotate.X);(0,n.translate)(r,this.x,this.y+this.d/2,this.z),u(t,e,r,this.roofColor);const s=(0,n.Triangle)(0,this.d/2,a.ROOF_HEIGHT,0,this.d,0,-1,0,0);(0,n.translate)(s,this.x,this.y,this.z),u(t,e,s,this.houseColor);const o=(0,n.Triangle)(0,this.d,0,0,this.d/2,a.ROOF_HEIGHT,1,0,0);(0,n.translate)(o,this.x+this.w,this.y,this.z),u(t,e,o,this.houseColor)}else if(this.type===s.Y){const i=(0,n.Plane45deg)(this.w/2,this.d,a.ROOF_HEIGHT,!0,n.PlaneRotate.Y);(0,n.translate)(i,this.x,this.y,this.z),u(t,e,i,this.roofColor);const r=(0,n.Plane45deg)(this.w/2,this.d,a.ROOF_HEIGHT,!1,n.PlaneRotate.Y);(0,n.translate)(r,this.x+this.w/2,this.y,this.z),u(t,e,r,this.roofColor);const s=(0,n.Triangle)(this.w,0,0,this.w/2,0,a.ROOF_HEIGHT,0,-1,0);(0,n.translate)(s,this.x,this.y,this.z),u(t,e,s,this.houseColor);const o=(0,n.Triangle)(this.w/2,0,a.ROOF_HEIGHT,this.w,0,0,0,1,0);(0,n.translate)(o,this.x,this.y+this.d,this.z),u(t,e,o,this.houseColor)}}}e.Roof=a,a.ROOF_HEIGHT=20;class h extends r{constructor(t,e,i,n,r,s){if(super(),this.color=t,this.x=e,this.y=i,this.width=n,this.height=r,this.depth=s,this.activeWindowsX=new Map,this.activeWindowsY=new Map,this.color=new f(this.color.r-10,this.color.g-10,this.color.b-10,this.color.a),this.windowsZ=Math.trunc(r/(h.windowHeight+2*h.offset)),this.windowsY=Math.trunc(s/(h.windowWidth+2*h.offset)),this.windowsX=Math.trunc(n/(h.windowWidth+2*h.offset)),this.windowsZ>0){if(this.windowsY>0)for(let t=0;t<h.activeWindowsOnOneWall;++t){const t=Math.trunc(Math.random()*this.windowsY),e=Math.trunc(Math.random()*this.windowsZ);this.activeWindowsY.set(1e3*e+t,{delayFrames:60*Math.random()*5+60,currentFrame:0,duration:60*Math.random()*2+60})}if(this.windowsX>0)for(let t=0;t<h.activeWindowsOnOneWall;++t){const t=Math.trunc(Math.random()*this.windowsX),e=Math.trunc(Math.random()*this.windowsZ);this.activeWindowsX.set(1e3*e+t,{delayFrames:60*Math.random()*5+60,currentFrame:0,duration:60*Math.random()*2+60})}}}getDynamicTriangleCount(){return 2*(this.windowsY+this.windowsX)*this.windowsZ*2}writeDynamicObject(t,e){const i=h.windowHeight+2*h.offset,r=(this.height-this.windowsZ*i)/2,s=h.windowWidth+2*h.offset,o=(this.depth-this.windowsY*s)/2,a=(this.width-this.windowsX*s)/2;{const a=this.x;for(let l=0;l<this.windowsZ;++l){const d=l*i+h.offset+r;for(let i=0;i<this.windowsY;++i){const r=i*s+h.offset+this.y+o,c=this.animInfo(void 0,i,l),f=c?h.calcColor(this.color,c):this.color,g=(0,n.YZPlane)(h.windowWidth,h.windowHeight);(0,n.translate)(g,a-1,r,d),u(t,e,g,f);const m=(0,n.YZPlane)(h.windowWidth,h.windowHeight);(0,n.rotateZ180)(m),(0,n.translate)(m,a+this.width+1,r,d),u(t,e,m,f)}}}{const o=this.y;for(let l=0;l<this.windowsZ;++l){const d=l*i+h.offset+r;for(let i=0;i<this.windowsX;++i){const r=i*s+h.offset+this.x+a,c=this.animInfo(i,void 0,l),f=c?h.calcColor(this.color,c):this.color,g=(0,n.XZPlane)(h.windowWidth,h.windowHeight);(0,n.translate)(g,r,o-1,d),u(t,e,g,f);const m=(0,n.XZPlane)(h.windowWidth,h.windowHeight);(0,n.rotateZ180)(m),(0,n.translate)(m,r,o+this.depth+1,d),u(t,e,m,f)}}}}animInfo(t,e,i){return void 0!==t?this.activeWindowsX.get(1e3*i+t):void 0!==e?this.activeWindowsY.get(1e3*i+e):void 0}frameUpdate(){super.frameUpdate(),this.activeWindowsX.forEach((t=>h.updateAnim(t))),this.activeWindowsY.forEach((t=>h.updateAnim(t)))}static updateAnim(t){t.currentFrame++,t.currentFrame>=t.delayFrames+t.duration+t.delayFrames+t.duration&&(t.currentFrame=0)}static calcColor(t,{delayFrames:e,currentFrame:i,duration:n}){if(i<=e)return t;if((i-=e)<=n){const e=170/n*i;return new f(t.r+e,t.g+e,t.b+e,t.a)}if((i-=n)<=e){const e=170;return new f(t.r+e,t.g+e,t.b+e,t.a)}if((i-=e)<=n){const e=170-170/n*i;return new f(t.r+e,t.g+e,t.b+e,t.a)}return t}}e.Windows=h,h.windowWidth=20,h.windowHeight=20,h.offset=5,h.activeWindowsOnOneWall=4;class l extends r{constructor(t,e,i,n,r){super(),this.z=i,this.color=new f(40,40,40,255);const s=Math.random();s<=.25?(this.x=t+l.OFFSET,this.y=e+l.OFFSET):s<=.5?(this.x=t+n-l.OFFSET,this.y=e+l.OFFSET):s<=.75?(this.x=t+l.OFFSET,this.y=e+r-l.OFFSET):(this.x=t+n-l.OFFSET,this.y=e+r-l.OFFSET),this.direction=Math.random()<.5,this.lines=Math.round(3*Math.random()+1)}getTriangleCount(){return 4*(this.lines+1)}writeObject(t,e){const i=this.x,r=this.y,s=this.direction?n.XZPlane:n.YZPlane,o=this.direction?l.WIDTH/2:0,a=this.direction?0:l.WIDTH/2,h=s(l.LINE_WIDTH,l.HEIGHT);(0,n.translate)(h,i,r,this.z),u(t,e,h,this.color);const d=s(l.LINE_WIDTH,l.HEIGHT);(0,n.rotateZ180)(d),(0,n.translate)(d,i,r,this.z),u(t,e,d,this.color);for(let h=0;h<this.lines;++h){const d=this.z+l.HEIGHT-l.HEIGHT/2/this.lines*(h+1),c=s(l.WIDTH,l.LINE_WIDTH);(0,n.translate)(c,i-o,r-a,d),u(t,e,c,this.color);const f=s(l.WIDTH,l.LINE_WIDTH);(0,n.rotateZ180)(f),(0,n.translate)(f,i-o,r-a,d),u(t,e,f,this.color)}}}e.Antenna=l,l.WIDTH=15,l.HEIGHT=35,l.LINE_WIDTH=2,l.OFFSET=6;class d extends r{constructor(t){super(),this.ROOT_COLOR=new f(112,94,88,255),this.LEAF_COLOR=new f(64,93,53,255),this.width=d.WIDTH+Math.trunc(40*Math.random()-20),this.height=d.HEIGHT+Math.trunc(80*Math.random()-40),this.x=(t-this.width)/(10*Math.random()+1),this.y=(t-this.width)/(10*Math.random()+1),this.leaf=Math.random()<.5?1:d.MAX_LEAF}getTriangleCount(){return 12+6*this.leaf}writeObject(t,e){const i=this.x,r=this.y,s=this.width,o=this.height,a=o/(d.MAX_LEAF+1),h=(0,n.Cuboid)(d.ROOT_WIDTH,d.ROOT_WIDTH,a);(0,n.translate)(h,i+s/2-d.ROOT_WIDTH/2,r+s/2-d.ROOT_WIDTH/2,0),u(t,e,h,this.ROOT_COLOR);const l=(o-a)/this.leaf;for(let h=1;h<=this.leaf;++h){const d=Math.min(s/h*1.7,s),c=o-a-l*(h-1),f=(0,n.Pyramid)(d,d,c);(0,n.translate)(f,i+(s-d)/2,r+(s-d)/2,o-c),u(t,e,f,this.LEAF_COLOR)}}}e.Tree=d,d.ROOT_WIDTH=5,d.WIDTH=60,d.HEIGHT=200,d.MAX_LEAF=3,function(t){t[t.X=0]="X",t[t.Y=1]="Y",t[t.LINK=2]="LINK"}(o=e.RoadDirection||(e.RoadDirection={}));class c extends r{constructor(t,e){super(),this.gridSize=t,this.direction=e,this.BORDER_COLOR=new f(175,157,151,255),this.ROAD_COLOR=new f(163,145,139,255),this.LINE_COLOR=new f(255,255,255,255)}getTriangleCount(){return this.direction!=o.LINK?6+c.LINES:6}writeObject(t,e){if(this.direction===o.X){const i=c.OFFSET,r=(this.gridSize-2*i)/6,s=(0,n.XYPlane)(this.gridSize,this.gridSize-2*i-2*r);(0,n.translate)(s,0,i+r,0),u(t,e,s,this.ROAD_COLOR);const o=(0,n.XYPlane)(this.gridSize,r);(0,n.translate)(o,0,i,0),u(t,e,o,this.BORDER_COLOR),(0,n.translate)(o,0,-i+this.gridSize-i-r,0),u(t,e,o,this.BORDER_COLOR);const a=this.gridSize/(2*c.LINES),h=(0,n.Triangle)(a,2,0,0,4,0,0,0,1);(0,n.translate)(h,a/2,this.gridSize/2,1);for(let i=0;i<c.LINES;++i)u(t,e,h,this.LINE_COLOR),(0,n.translate)(h,2*a,0,0)}else if(this.direction===o.Y){const i=c.OFFSET,r=(this.gridSize-2*i)/6,s=(0,n.XYPlane)(this.gridSize-2*i-2*r,this.gridSize);(0,n.translate)(s,i+r,0,0),u(t,e,s,this.ROAD_COLOR);const o=(0,n.XYPlane)(r,this.gridSize);(0,n.translate)(o,i,0,0),u(t,e,o,this.BORDER_COLOR),(0,n.translate)(o,-i+this.gridSize-i-r,0,0),u(t,e,o,this.BORDER_COLOR);const a=this.gridSize/(2*c.LINES),h=(0,n.Triangle)(4,0,0,2,a,0,0,0,1);(0,n.translate)(h,this.gridSize/2,a/2,1);for(let i=0;i<c.LINES;++i)u(t,e,h,this.LINE_COLOR),(0,n.translate)(h,0,2*a,0)}else if(this.direction===o.LINK){u(t,e,(0,n.XYPlane)(this.gridSize,this.gridSize),this.ROAD_COLOR);const i=c.OFFSET,r=(this.gridSize-2*i)/6+i,s=(0,n.Triangle)(r,0,0,0,r,0,0,0,1);(0,n.translate)(s,0,0,1),u(t,e,s,this.BORDER_COLOR);const o=(0,n.Triangle)(r,0,0,r,r,0,0,0,1);(0,n.translate)(o,this.gridSize-r,0,1),u(t,e,o,this.BORDER_COLOR);const a=(0,n.Triangle)(r,r,0,0,r,0,0,0,1);(0,n.translate)(a,0,this.gridSize-r,1),u(t,e,a,this.BORDER_COLOR);const h=(0,n.Triangle)(-r,0,0,0,-r,0,0,0,1);(0,n.translate)(h,this.gridSize,this.gridSize,1),u(t,e,h,this.BORDER_COLOR)}}}e.Road=c,c.OFFSET=20,c.LINES=4;class f{constructor(t,e,i,n){this.r=t,this.g=e,this.b=i,this.a=n,this.r=t<0?0:t>255?255:t,this.g=e<0?0:e>255?255:e,this.b=i<0?0:i>255?255:i}static RandomColor(){return new f(255*Math.random(),255*Math.random(),255*Math.random(),255)}}function u(t,e,i,n){const r=e.nextIndex;for(let t=0;t<i.indexes.length;t+=3)e.write3Uint16(i.indexes[t+0]+r,i.indexes[t+1]+r,i.indexes[t+2]+r);for(let e=0;e<i.positions.length;e+=3){t.write3Float32(i.positions[e+0],i.positions[e+1],i.positions[e+2]);const r=3===i.normals.length?0:e;t.write3Float32(i.normals[r+0],i.normals[r+1],i.normals[r+2]),t.write4Uint8(n.r,n.g,n.b,n.a)}}e.Color=f,e.PALLETS=[new f(238,238,238,255),new f(85,85,85,255),new f(135,136,132,255),new f(236,236,215,255),new f(209,221,226,255),new f(145,149,152,255),new f(67,151,74,255),new f(235,198,1,255),new f(199,93,111,255),new f(231,151,82,255),new f(74,113,167,255),new f(217,170,142,255),new f(120,149,109,255),new f(165,105,104,255),new f(228,203,169,255),new f(235,193,148,255),new f(183,65,76,255),new f(233,84,68,255)],e.calcHeight=function(t,e,i,n,r,s,o){const a=Math.pow(Math.sin(Math.PI*((t+.5)/i))*Math.sin(Math.PI*((e+.5)/n)),r);return Math.max(Math.min(s,s*a),o)}}},e={};!function i(n){var r=e[n];if(void 0!==r)return r.exports;var s=e[n]={exports:{}};return t[n].call(s.exports,s,s.exports,i),s.exports}(607)})();